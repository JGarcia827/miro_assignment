
server.port: 8080

spring.application.name=assignment-miro

spring.cache.cache-names=rate-limit-buckets-list, rate-limit-buckets
spring.cache.caffeine.spec=maximumSize=100000,expireAfterAccess=3600s

# Rate limiters. Note that limiter are prioritized by declaring order
bucket4j.enabled=true
bucket4j.filters[0].cache-name=rate-limit-buckets-list
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].url=/api/v1/widgets/
bucket4j.filters[0].http-response-body="{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"Request quota exhausted.\" }"
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=200
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval=0
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=minutes


bucket4j.filters[1].cache-name=rate-limit-buckets
bucket4j.filters[1].filter-method=servlet
bucket4j.filters[1].url=/api/v1/widgets/.*
bucket4j.filters[1].http-response-body="{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"Request quota exhausted.\" }"
bucket4j.filters[1].rate-limits[0].bandwidths[0].capacity=1000
bucket4j.filters[1].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[1].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[1].rate-limits[0].bandwidths[0].fixed-refill-interval=0
bucket4j.filters[1].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=minutes

